@page "/Posts/Create"
@inject IBlogService _blog
@using System.IO;
@using Blog.Data.Models

<h3>Create a New Blog Post</h3>

<EditForm Model="_blogPost" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	
	<div class="mb-3">
		<label for="tbTitle" class="form-label">Title</label>
		<InputText id="tbTitle" class="form-control" @bind-Value="_blogPost.Title" />
	</div>
	<div class="mb-3">
		<label for="tbAuthor" class="form-label">Author</label>
		<InputText id="tbAuthor" class="form-control" @bind-Value="_blogPost.Author" />
	</div>
	<div class="mb-3">
		<label for="taContent" class="form-label">Content</label>
		<InputTextArea id="taContent" class="form-control" @bind-Value="_blogPost.Content" placeholder="Body of blog post" rows="4" />
	</div>
	<div class="mb-3">
		<label for="tbTags" class="form-label">Tags</label>
		<InputText id="tbTags" class="form-control" @bind-Value="_blogPost.Tags" aria-describedby="tagsHelp" />
		<div id="tagsHelp" class="form-text">Comma-separated list of words or concepts related to your post</div>
	</div>
	<div class="mb-3">
		<label for="fileImage" class="form-label">Thumbnail image</label>
		<InputFile accept="image/*" id="fileImage" class="form-control" OnChange="HandleInputFileChange" />
		<div class="form-text">
		</div>
	</div>
	<div class="mb-3">
		<button type="submit" class="btn btn-success">Submit</button>
	</div>
</EditForm>
<div class="container ">
	@if (_createdPost != null)
	{
		<h4>Post ID @(_createdPost.PostID) created by @(_createdPost.Author), on @(_createdPost.DateCreated.ToString("MM/dd/yyyy"))</h4>
	}
</div>

@code
{
	private string _tempThumbnailPath = string.Empty;
	private BlogPost _blogPost = new();
	private BlogPost? _createdPost = null;

	private async Task HandleInputFileChange(InputFileChangeEventArgs e)
	{
	}

	private void ClearCachedThumbnailFile()
	{
	}

	private async Task HandleValidSubmit()
	{
		var createdTask = await _blog.CreatePost(_blogPost);
	}
}